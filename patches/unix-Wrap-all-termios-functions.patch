From 0949e4fcc0ef4a89360092b0293256411d7ba9d1 Mon Sep 17 00:00:00 2001
From: CJ van den Berg <cj@vdbonline.com>
Date: Wed, 15 May 2013 10:12:46 +0200
Subject: [PATCH] Wrap all termios.h functions because they are declared inline
 on Android

---
 System/Posix/Terminal/Common.hsc | 20 ++++++++++----------
 cbits/HsUnix.c                   | 35 +++++++++++++++++++++++++++++++++++
 2 files changed, 45 insertions(+), 10 deletions(-)

diff --git a/System/Posix/Terminal/Common.hsc b/System/Posix/Terminal/Common.hsc
index 5d718a8..2e793a0 100644
--- a/System/Posix/Terminal/Common.hsc
+++ b/System/Posix/Terminal/Common.hsc
@@ -332,14 +332,14 @@
     w <- c_cfgetispeed p
     return (word2Baud w)
 
-foreign import capi unsafe "termios.h cfgetispeed"
+foreign import capi unsafe "__hsunix_cfgetispeed"
   c_cfgetispeed :: Ptr CTermios -> IO CSpeed
 
 withInputSpeed :: TerminalAttributes -> BaudRate -> TerminalAttributes
 withInputSpeed termios br = unsafePerformIO $ do
   withNewTermios termios $ \p -> c_cfsetispeed p (baud2Word br)
 
-foreign import capi unsafe "termios.h cfsetispeed"
+foreign import capi unsafe "__hsunix_cfsetispeed"
   c_cfsetispeed :: Ptr CTermios -> CSpeed -> IO CInt
 
 
@@ -349,14 +349,14 @@
     w <- c_cfgetospeed p
     return (word2Baud w)
 
-foreign import capi unsafe "termios.h cfgetospeed"
+foreign import capi unsafe "__hsunix_cfgetospeed"
   c_cfgetospeed :: Ptr CTermios -> IO CSpeed
 
 withOutputSpeed :: TerminalAttributes -> BaudRate -> TerminalAttributes
 withOutputSpeed termios br = unsafePerformIO $ do
   withNewTermios termios $ \p -> c_cfsetospeed p (baud2Word br)
 
-foreign import capi unsafe "termios.h cfsetospeed"
+foreign import capi unsafe "__hsunix_cfsetospeed"
   c_cfsetospeed :: Ptr CTermios -> CSpeed -> IO CInt
 
 -- | @getTerminalAttributes fd@ calls @tcgetattr@ to obtain
@@ -368,7 +368,7 @@
       throwErrnoIfMinus1_ "getTerminalAttributes" (c_tcgetattr fd p)
   return $ makeTerminalAttributes fp
 
-foreign import capi unsafe "termios.h tcgetattr"
+foreign import capi unsafe "__hsunix_tcgetattr"
   c_tcgetattr :: CInt -> Ptr CTermios -> IO CInt
 
 data TerminalState
@@ -393,7 +393,7 @@
     state2Int WhenDrained = (#const TCSADRAIN)
     state2Int WhenFlushed = (#const TCSAFLUSH)
 
-foreign import capi unsafe "termios.h tcsetattr"
+foreign import capi unsafe "__hsunix_tcsetattr"
    c_tcsetattr :: CInt -> CInt -> Ptr CTermios -> IO CInt
 
 -- | @sendBreak fd duration@ calls @tcsendbreak@ to transmit a
@@ -403,7 +403,7 @@
 sendBreak (Fd fd) duration
   = throwErrnoIfMinus1_ "sendBreak" (c_tcsendbreak fd (fromIntegral duration))
 
-foreign import capi unsafe "termios.h tcsendbreak"
+foreign import capi unsafe "__hsunix_tcsendbreak"
   c_tcsendbreak :: CInt -> CInt -> IO CInt
 
 -- | @drainOutput fd@ calls @tcdrain@ to block until all output
@@ -411,7 +411,7 @@
 drainOutput :: Fd -> IO ()
 drainOutput (Fd fd) = throwErrnoIfMinus1_ "drainOutput" (c_tcdrain fd)
 
-foreign import capi unsafe "termios.h tcdrain"
+foreign import capi unsafe "__hsunix_tcdrain"
   c_tcdrain :: CInt -> IO CInt
 
 
@@ -432,7 +432,7 @@
     queue2Int OutputQueue = (#const TCOFLUSH)
     queue2Int BothQueues  = (#const TCIOFLUSH)
 
-foreign import capi unsafe "termios.h tcflush"
+foreign import capi unsafe "__hsunix_tcflush"
   c_tcflush :: CInt -> CInt -> IO CInt
 
 data FlowAction
@@ -454,7 +454,7 @@
     action2Int TransmitStop  = (#const TCIOFF)
     action2Int TransmitStart = (#const TCION)
 
-foreign import capi unsafe "termios.h tcflow"
+foreign import capi unsafe "__hsunix_tcflow"
   c_tcflow :: CInt -> CInt -> IO CInt
 
 -- | @getTerminalProcessGroupID fd@ calls @tcgetpgrp@ to
diff --git a/cbits/HsUnix.c b/cbits/HsUnix.c
index db97de2..fc69da2 100644
--- a/cbits/HsUnix.c
+++ b/cbits/HsUnix.c
@@ -182,3 +182,38 @@ HsInt __hsunix_long_path_size(void) {
 #endif
 }
 
+/* Wrappers for functions that are inline in Bionic libc (Android) */
+int __hsunix_tcgetattr(int fd, struct termios *termios_p) {
+    return tcgetattr(fd, termios_p);
+}
+int __hsunix_tcsetattr(int fd, int optional_actions,
+                       const struct termios *termios_p) {
+    return tcsetattr(fd, optional_actions, termios_p);
+}
+int __hsunix_tcflow(int fd, int action) {
+    return tcflow(fd, action);
+}
+int __hsunix_tcflush(int fd, int queue_selector) {
+    return tcflush(fd, queue_selector);
+}
+int __hsunix_tcsendbreak(int fd, int duration) {
+    return tcsendbreak(fd, duration);
+}
+speed_t __hsunix_cfgetospeed(const struct termios *termios_p) {
+    return cfgetospeed(termios_p);
+}
+int __hsunix_cfsetospeed(struct termios *termios_p, speed_t speed) {
+    return cfsetospeed(termios_p, speed);
+}
+speed_t __hsunix_cfgetispeed(const struct termios *termios_p) {
+    return cfgetispeed(termios_p);
+}
+int __hsunix_cfsetispeed(struct termios *termios_p, speed_t speed) {
+    return cfsetispeed(termios_p, speed);
+}
+
+#ifdef linux_android_HOST_OS
+int __hsunix_tcdrain(int fd) { return 0; }
+#else
+int __hsunix_tcdrain(int fd) { return tcdrain(fd); }
+#endif
-- 
1.8.2.3

